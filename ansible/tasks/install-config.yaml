---

#
# Generate a valid openshift-install
#

# CA only for registry
- name: Collect data for the install-config.yaml with mirror registry
  when: registry
  block:

    - name: Get the CA cert into a variable
      ansible.builtin.command:
        cmd: awk '{$1="  "$1}1' /root/CA/CA_cert.pem
      register: ca_cert

    - name: Show CA content
      debug:
          var: ca_cert


# Pull secret.
#
# With registry == /root/registry/pull-secret.json
# No registry   == /root/pull-secret.txt
#
# "when" clause fails because if a task fails or is skipped, 
# the variable still is registered with a failure or skipped status"

- name: Set pull-secret file - registry
  ansible.builtin.set_fact:
    pullfile: /root/registry/pull-secret.json
  when: registry

- name: Set pull-secret file - NO registry
  ansible.builtin.set_fact:
    pullfile: /root/pull-secret.txt
  when: not registry

- name: Get the pull secret into a variable
  ansible.builtin.shell:
    cmd: cat {{ pullfile }} | jq -c .
  register: pull_secret

- name: Show pull-secret
  debug:
    var: pull_secret


# SSH key is collected for all.

- name: Get the SSH public key in a a variable
  ansible.builtin.command:
    cmd: cat /root/.ssh/id_rsa.pub
  register: ssh_public_key

- name: Show SSH public key
  debug:
    var: ssh_public_key


# Assemble!

- name: Assemble the install-config.yaml
  ansible.builtin.template:
    src: files/ocp-install/install-config.yaml.j2
    dest: /root/install-config.yaml
    owner: root
    group: root
    mode: '0644'
    backup: false


# Ignition files

# Checking for existing run.
- name: Test the existence of existing ignition files. REMOVE TO RECREATE.
  ansible.builtin.stat:
    path: /root/{{ cluster_name }}
  register: ignition_files

- name: Generate and prepare ignition files
  when: not ignition_files.stat.exists
  block:

    - name: Create folder for cluster
      ansible.builtin.file:
        path: /root/{{ cluster_name }}
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy install-config.yaml to install-dir
      ansible.builtin.copy:
        src: /root/install-config.yaml
        dest: /root/{{ cluster_name }}/install-config.yaml
        owner: root
        group: root
        mode: '0640'
        remote_src: true

    - name: Create ignition files
      ansible.builtin.shell:
        cmd: PATH=$PATH:/root/bin openshift-install --dir {{ cluster_name }} create ignition-configs
      args:
        chdir: /root/

    - name: Copy ignition files to http server
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /var/www/html
        owner: apache
        group: apache
        mode: '0664'
        remote_src: true
      with_items:
        - /root/{{ cluster_name }}/bootstrap.ign
        - /root/{{ cluster_name }}/master.ign
        - /root/{{ cluster_name }}/worker.ign
