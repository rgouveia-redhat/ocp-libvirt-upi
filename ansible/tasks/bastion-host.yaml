---

- name: Register bastion host
  community.general.redhat_subscription:
    state: present
    username: "{{ rh_username }}"
    password: "{{ rh_password }}"
    auto_attach: true
    force_register: false
    syspurpose:
      role: "Red Hat Enterprise Linux Server"
      usage: "Development/Test"
      service_level_agreement: "Self-Support"

- name: Get Free Physical Extents (PE)
  ansible.builtin.shell:
    cmd: vgdisplay | grep -oP 'Free  PE / Size[[:space:]]+\K[[:digit:]]+'
  register: free_pe

- name: Show free PE
  ansible.builtin.debug:
    var: free_pe
  tags:
    - debug

- name: Take back the space reserved for /home.
  when: free_pe.stdout | int > 0
  block:
    - name: Expand filesystem
      ansible.builtin.shell:
        cmd: lvextend --resizefs --extents +100%FREE {{ ansible_facts.proc_cmdline.root }}

    - name: Make sure /home does not exist in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '/home'
        state: absent


- name: Install needed packages
  ansible.builtin.package:
    name:
      - bash-completion
      - vim
      - haproxy
      - ca-certificates
      - skopeo
      - wget
      - bind
      - bind-utils
      - dhcp-server
      - tftp-server
      - syslinux
      - httpd
      - chrony
      - jq
      - git
      - openssl
      - httpd-tools
      - podman
    state: present

# We only want the bastion nameserver as active.
# Disable the nameserver provided by the "default" network.

- block:
  - name: Disable the nameserver provided by the "default" network
    ansible.builtin.shell: nmcli connection modify {{ ansible_facts.default_ipv4.interface }} ipv4.ignore-auto-dns yes

  - name: restart NetworkManager
    ansible.builtin.systemd:
      name: NetworkManager.service
      state: restarted
  when: ansible_dns.nameservers|length > 1
