---

- name: Copy SSH key to bastion
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /root/.ssh/
    owner: root
    group: root
    mode: '0400'
  with_items:
    - ../ssh/id_rsa
    - ../ssh/id_rsa.pub

- name: Copy pull-secret to bastion
  ansible.builtin.copy:
    src: "{{ pull_secret }}"
    dest: /root/
    owner: root
    group: root
    mode: '0640'

# Install tooling.
# https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/

- name: Create binaries directory /bin
  ansible.builtin.file:
    path: /root/bin
    state: directory
    owner: root
    group: root
    mode: '0755'

# Checking for openshift-install only.
- name: Test existence of client tools tar.gz files
  ansible.builtin.stat:
    path: /root/bin/openshift-install-linux-{{ cluster_version }}.tar.gz
  register: cli_install

- name: Download client tools with checksum url (sha256)
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: /root/bin
    owner: root
    mode: '0640'
    force: false
    checksum: sha256:https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/sha256sum.txt
  with_items:
    - "https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/openshift-client-linux-{{ cluster_version }}.tar.gz"
    - "https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/openshift-install-linux-{{ cluster_version }}.tar.gz"
    - "https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/opm-linux-{{ cluster_version }}.tar.gz"
    - "https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/release.txt"
  when: not cli_install.stat.exists

# Checking for openshift-install only.
- name: Test existence of client tools binaries
  ansible.builtin.stat:
    path: /root/bin/openshift-install
  register: cli_install_bin

- name: Unarchive client tools
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: /root/bin
    remote_src: true
  with_items:
    - /root/bin/openshift-install-linux-{{ cluster_version }}.tar.gz
    - /root/bin/openshift-client-linux-{{ cluster_version }}.tar.gz
    - /root/bin/opm-linux-{{ cluster_version }}.tar.gz
  when: not cli_install_bin.stat.exists

- name: Add oc completion commands in .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^source <(oc completion bash)'
    line: 'source <(oc completion bash)'

- name: Add openshift-install completion commands in .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^source <(openshift-install completion bash)'
    line: 'source <(openshift-install completion bash)'

- name: Add KUBECONFIG to .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^export KUBECONFIG=/root/{{ cluster_name }}/auth/kubeconfig'
    line: 'export KUBECONFIG=/root/{{ cluster_name }}/auth/kubeconfig'
