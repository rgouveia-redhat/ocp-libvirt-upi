---

- name: Copy SSH key to bastion
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /root/.ssh/
    owner: root
    group: root
    mode: '0400'
  with_items:
    - ../ssh/id_rsa
    - ../ssh/id_rsa.pub

- name: Copy pull-secret to bastion
  ansible.builtin.copy:
    src: "{{ pull_secret }}"
    dest: /root/
    owner: root
    group: root
    mode: '0640'

# Install tooling.
# https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/

- name: Create binaries directory /bin
  ansible.builtin.file:
    path: /root/bin
    state: directory
    owner: root
    group: root
    mode: '0755'

# # Checking for openshift-install only.
# - name: Test existence of client tools tar.gz files
#   ansible.builtin.stat:
#     path: /root/bin/openshift-install-linux-{{ cluster_version }}.tar.gz
#   register: cli_install

- name: Download client tools with checksum url (sha256)
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: /root/bin
    owner: root
    mode: '0640'
    force: false
    checksum: sha256:https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/sha256sum.txt
  with_items:
    - "https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/openshift-client-linux-{{ cluster_version }}.tar.gz"
    - "https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/openshift-install-linux-{{ cluster_version }}.tar.gz"
    - "https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/{{ cluster_version }}/release.txt"
#  when: not cli_install.stat.exists

# # Checking for openshift-install only.
# - name: Test existence of client tools binaries
#   ansible.builtin.stat:
#     path: /root/bin/openshift-install
#   register: cli_install_bin

- name: Unarchive client tools
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: /root/bin
    remote_src: true
  with_items:
    - /root/bin/openshift-install-linux-{{ cluster_version }}.tar.gz
    - /root/bin/openshift-client-linux-{{ cluster_version }}.tar.gz
  #when: not cli_install_bin.stat.exists


# Note: Other tools may not exist in all the versions.

- name: Download oc-mirror
  ansible.builtin.get_url:
    url: "https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/latest/oc-mirror.rhel9.tar.gz"
    dest: /root/bin
    owner: root
    mode: '0640'
    force: false
    checksum: sha256:https://mirror.openshift.com/pub/openshift-v4/{{ arch }}/clients/ocp/latest/sha256sum.txt
  ignore_errors: true

# # Checking for openshift-install only.
# - name: Test existence of client tools binaries
#   ansible.builtin.stat:
#     path: /root/bin/openshift-install
#   register: cli_install_bin

- name: Unarchive client tools
  ansible.builtin.unarchive:
    src: "/root/bin/oc-mirror.rhel9.tar.gz"
    dest: /root/bin
    remote_src: true
  ignore_errors: true
  #when: not cli_install_bin.stat.exists

- name: Set oc-mirror attributes
  ansible.builtin.file:
    path: /root/bin/oc-mirror
    state: file
    mode: '0755'
  ignore_errors: true


### Add parameters to .bash_profile

- name: Add cluter version env to .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^export CLUSTER_VERSION=.*'
    line: 'export CLUSTER_VERSION={{ cluster_version }}'

- name: Add cluter name env to .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^export CLUSTER_NAME=.*'
    line: 'export CLUSTER_NAME={{ cluster_name }}'

- name: Add cluter domain env to .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^export CLUSTER_DOMAIN=.*'
    line: 'export CLUSTER_DOMAIN={{ cluster_domain }}'


- name: Add oc completion commands in .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^source <(oc completion bash)'
    line: 'source <(oc completion bash)'

- name: Add openshift-install completion commands in .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^source <(openshift-install completion bash)'
    line: 'source <(openshift-install completion bash)'

- name: Add KUBECONFIG to .bash_profile
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    regexp: '^export KUBECONFIG=/root/install-dir/auth/kubeconfig'
    line: 'export KUBECONFIG=/root/install-dir/auth/kubeconfig'


### Add common commands to .bash_history

- name: Add commands to .bash_history
  ansible.builtin.copy:
    src: files/bash_history
    dest: /root/.bash_history
    owner: root
    group: root
    mode: '0600'
    backup: false


### Other utils

- name: Add small bash script to refresh ignition files
  ansible.builtin.template:
    src: files/bin/update-ignition-files.sh.j2
    dest: /root/bin/update-ignition-files.sh
    owner: root
    group: root
    mode: '0755'
    backup: false

- name: Add small bash script to deploy internal registry
  ansible.builtin.copy:
    src: files/bin/deploy-internal-registry-storage.sh
    dest: /root/bin/
    owner: root
    group: root
    mode: '0755'
    backup: false
  when: registry_nfs
