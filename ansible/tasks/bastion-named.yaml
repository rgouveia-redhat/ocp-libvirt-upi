---
# named: ips and names.
# /etc/named.conf

- name: Configure /etc/named.conf
  ansible.builtin.template:
    src: files/named/named.conf.j2
    dest: /etc/named.conf
    owner: root
    group: named
    mode: '0740'
    backup: false
    validate: /usr/sbin/named-checkconf %s
  notify:
    - Restart named

- name: Configure dns zone
  ansible.builtin.template:
    src: files/named/zone.db.j2
    dest: /var/named/dynamic/{{ cluster_domain }}.db
    owner: root
    group: named
    mode: '0740'
    backup: false
    validate: /usr/sbin/named-checkzone "{{ cluster_domain }}" %s
  notify:
    - Restart named

- name: Configure dns reverse
  ansible.builtin.template:
    src: files/named/reverse.db.j2
    dest: /var/named/dynamic/{{ network_reverse }}.in-addr.arpa.db
    owner: root
    group: named
    mode: '0740'
    backup: false
    validate: /usr/sbin/named-checkzone "{{ network_reverse }}.in-addr.arpa" %s
  notify:
    - Restart named

- name: Restart and enable named.service
  ansible.builtin.systemd:
    name: named.service
    state: started
    enabled: true

- name: Configure Firewalld
  ansible.posix.firewalld:
    service: dns
    state: enabled
    permanent: true
    immediate: true

# We only want the bastion nameserver as active.
# Disable the nameserver provided by the "default" network.

- name: Disable the nameserver provided by the default network
  when: ansible_dns.nameservers|length > 1
  block:
    - name: Modify nmcli connection
      ansible.builtin.shell: nmcli connection modify {{ ansible_facts.default_ipv4.interface }} ipv4.ignore-auto-dns yes

    - name: Restart NetworkManager
      ansible.builtin.systemd:
        name: NetworkManager.service
        state: restarted
