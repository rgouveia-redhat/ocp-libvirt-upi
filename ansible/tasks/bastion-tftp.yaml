---

# tftp: role per mac and default.
# /var/lib/tftpboot/pxelinux.cfg/default

- name: Make Network Boot Programs for BIOS based systems available
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /var/lib/tftpboot/
    remote_src: true
    mode: preserve
    owner: root
  with_items:
    - /usr/share/syslinux/memdisk
    - /usr/share/syslinux/menu.c32
    - /usr/share/syslinux/pxelinux.0
    - /usr/share/syslinux/ldlinux.c32
    - /usr/share/syslinux/libutil.c32

- name: Create directory for PXE server configuration
  ansible.builtin.file:
    path: /var/lib/tftpboot/pxelinux.cfg
    state: directory
    owner: root
    group: root
    mode: '0755'

### Menus

- name: Configure TFTP pxelinux.cfg/default
  ansible.builtin.template:
    src: files/tftp/default.j2
    dest: /var/lib/tftpboot/pxelinux.cfg/default
    owner: root
    group: root
    mode: '0644'
    backup: false

- name: Configure TFTP pxelinux.cfg/bootstrap
  ansible.builtin.template:
    src: files/tftp/bootstrap.j2
    dest: /var/lib/tftpboot/pxelinux.cfg/bootstrap
    owner: root
    group: root
    mode: '0644'
    backup: false

- name: Configure TFTP pxelinux.cfg/masters
  ansible.builtin.template:
    src: files/tftp/master.j2
    dest: /var/lib/tftpboot/pxelinux.cfg/master
    owner: root
    group: root
    mode: '0644'
    backup: false

- name: Configure TFTP pxelinux.cfg/workers
  ansible.builtin.template:
    src: files/tftp/worker.j2
    dest: /var/lib/tftpboot/pxelinux.cfg/worker
    owner: root
    group: root
    mode: '0644'
    backup: false

### Simbolic links for convenience

# Delete previous links
# Just to be sure. When a VM is deleted a new MAC is generated.

- name: List files matching '01-*'
  ansible.builtin.find:
    file_type: link
    paths: /var/lib/tftpboot/pxelinux.cfg/
    patterns: '01-*'
  register: to_remove

- name: Remove links and reset dhcp leases
  when: to_remove.matched > 0
  block:

    - name: Remove links
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ to_remove.files }}"

    - name: Stop dhcpd service
      ansible.builtin.systemd_service:
        name: dhcpd.service
        state: stopped

    - name: Reset dhcp leases file
      ansible.builtin.copy:
        dest: /var/lib/dhcpd/dhcpd.leases
        content: ''
        owner: dhcpd
        group: dhcpd
        mode: '0644'
        force: true

    - name: Start dhcpd service
      ansible.builtin.systemd_service:
        name: dhcpd.service
        state: started


- name: Create a symbolic link for bootstrap mac address
  ansible.builtin.file:
    src: bootstrap
    dest: /var/lib/tftpboot/pxelinux.cfg/01-{{ mac_bootstrap | replace(':', '-') }}
    owner: root
    group: root
    mode: '0644'
    state: link

- name: Create a symbolic link for masters mac address
  ansible.builtin.file:
    src: master
    dest: /var/lib/tftpboot/pxelinux.cfg/01-{{ item | replace(':', '-') }}
    owner: root
    group: root
    mode: '0644'
    state: link
  with_items:
    - "{{ mac_master1 }}"
    - "{{ mac_master2 }}"
    - "{{ mac_master3 }}"


- name: Create a symbolic link for worker1 mac address
  ansible.builtin.file:
    src: worker
    dest: /var/lib/tftpboot/pxelinux.cfg/01-{{ mac_worker1 | replace(':', '-') }}
    owner: root
    group: root
    mode: '0644'
    state: link
  when: mac_worker1 is defined

- name: Create a symbolic link for worker2 mac address
  ansible.builtin.file:
    src: worker
    dest: /var/lib/tftpboot/pxelinux.cfg/01-{{ mac_worker2 | replace(':', '-') }}
    owner: root
    group: root
    mode: '0644'
    state: link
  when: mac_worker2 is defined

- name: Create a symbolic link for worker3 mac address
  ansible.builtin.file:
    src: worker
    dest: /var/lib/tftpboot/pxelinux.cfg/01-{{ mac_worker3 | replace(':', '-') }}
    owner: root
    group: root
    mode: '0644'
    state: link
  when: mac_worker3 is defined

## TODO: What happens if there are more workers?

- name: Restart and enable tftp service
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items:
    - tftp.service
    - tftp.socket

- name: Configure Firewalld
  ansible.posix.firewalld:
    service: tftp
    state: enabled
    permanent: true
    immediate: true
